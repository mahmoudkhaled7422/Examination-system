//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Examination_system
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Examination_systemEntities : DbContext
    {
        public Examination_systemEntities()
            : base("name=Examination_systemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Choice> Choices { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<instCourse> instCourses { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<QuesType> QuesTypes { get; set; }
        public virtual DbSet<stdCourse> stdCourses { get; set; }
        public virtual DbSet<stdExamQuestion> stdExamQuestions { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
    
        public virtual ObjectResult<string> deletechoice(Nullable<int> chid)
        {
            var chidParameter = chid.HasValue ?
                new ObjectParameter("chid", chid) :
                new ObjectParameter("chid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deletechoice", chidParameter);
        }
    
        public virtual ObjectResult<string> deletequestion(Nullable<int> qid)
        {
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deletequestion", qidParameter);
        }
    
        public virtual ObjectResult<string> DelExam(Nullable<int> eid)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DelExam", eidParameter);
        }
    
        public virtual ObjectResult<string> DelSt(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DelSt", idParameter);
        }
    
        public virtual ObjectResult<string> DelSt_crs(Nullable<int> sid, Nullable<int> cid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DelSt_crs", sidParameter, cidParameter);
        }
    
        public virtual ObjectResult<string> DelSt_crseByID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DelSt_crseByID", idParameter);
        }
    
        public virtual ObjectResult<string> DelSt_crses(Nullable<int> sid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DelSt_crses", sidParameter);
        }
    
        public virtual ObjectResult<string> DelStd_exam_qust(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DelStd_exam_qust", idParameter);
        }
    
        public virtual ObjectResult<string> DelStds_course(Nullable<int> cid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DelStds_course", cidParameter);
        }
    
        public virtual ObjectResult<string> ExamAnswers(Nullable<int> stdID, Nullable<int> examNum, string stdAnswers, Nullable<int> quesID)
        {
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("stdID", stdID) :
                new ObjectParameter("stdID", typeof(int));
    
            var examNumParameter = examNum.HasValue ?
                new ObjectParameter("examNum", examNum) :
                new ObjectParameter("examNum", typeof(int));
    
            var stdAnswersParameter = stdAnswers != null ?
                new ObjectParameter("stdAnswers", stdAnswers) :
                new ObjectParameter("stdAnswers", typeof(string));
    
            var quesIDParameter = quesID.HasValue ?
                new ObjectParameter("quesID", quesID) :
                new ObjectParameter("quesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ExamAnswers", stdIDParameter, examNumParameter, stdAnswersParameter, quesIDParameter);
        }
    
        public virtual ObjectResult<string> examCorrection(Nullable<int> sid, Nullable<int> examNum, Nullable<int> quesID)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var examNumParameter = examNum.HasValue ?
                new ObjectParameter("examNum", examNum) :
                new ObjectParameter("examNum", typeof(int));
    
            var quesIDParameter = quesID.HasValue ?
                new ObjectParameter("quesID", quesID) :
                new ObjectParameter("quesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("examCorrection", sidParameter, examNumParameter, quesIDParameter);
        }
    
        public virtual ObjectResult<string> ExamGeneration(string exam)
        {
            var examParameter = exam != null ?
                new ObjectParameter("exam", exam) :
                new ObjectParameter("exam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ExamGeneration", examParameter);
        }
    
        public virtual ObjectResult<string> insertchoice(string choice, Nullable<int> qid)
        {
            var choiceParameter = choice != null ?
                new ObjectParameter("choice", choice) :
                new ObjectParameter("choice", typeof(string));
    
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insertchoice", choiceParameter, qidParameter);
        }
    
        public virtual ObjectResult<string> insertquestion(string qustion, Nullable<int> grade, Nullable<int> crsid, string correctchoice)
        {
            var qustionParameter = qustion != null ?
                new ObjectParameter("qustion", qustion) :
                new ObjectParameter("qustion", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var crsidParameter = crsid.HasValue ?
                new ObjectParameter("crsid", crsid) :
                new ObjectParameter("crsid", typeof(int));
    
            var correctchoiceParameter = correctchoice != null ?
                new ObjectParameter("correctchoice", correctchoice) :
                new ObjectParameter("correctchoice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insertquestion", qustionParameter, gradeParameter, crsidParameter, correctchoiceParameter);
        }
    
        public virtual ObjectResult<string> Insertstd_crs(Nullable<int> sid, Nullable<int> crsid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var crsidParameter = crsid.HasValue ?
                new ObjectParameter("crsid", crsid) :
                new ObjectParameter("crsid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Insertstd_crs", sidParameter, crsidParameter);
        }
    
        public virtual ObjectResult<string> InsertStd_exam_qust(Nullable<int> id, Nullable<int> sid, Nullable<int> quesid, Nullable<int> examid, string stdanswer, Nullable<int> stdGrade)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var quesidParameter = quesid.HasValue ?
                new ObjectParameter("quesid", quesid) :
                new ObjectParameter("quesid", typeof(int));
    
            var examidParameter = examid.HasValue ?
                new ObjectParameter("examid", examid) :
                new ObjectParameter("examid", typeof(int));
    
            var stdanswerParameter = stdanswer != null ?
                new ObjectParameter("stdanswer", stdanswer) :
                new ObjectParameter("stdanswer", typeof(string));
    
            var stdGradeParameter = stdGrade.HasValue ?
                new ObjectParameter("stdGrade", stdGrade) :
                new ObjectParameter("stdGrade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertStd_exam_qust", idParameter, sidParameter, quesidParameter, examidParameter, stdanswerParameter, stdGradeParameter);
        }
    
        public virtual ObjectResult<string> InsExam(Nullable<int> eid, string ename)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsExam", eidParameter, enameParameter);
        }
    
        public virtual ObjectResult<SelectAllSt_Result> SelectAllSt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllSt_Result>("SelectAllSt");
        }
    
        public virtual ObjectResult<selectchoice_Result> selectchoice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectchoice_Result>("selectchoice");
        }
    
        public virtual ObjectResult<string> selectchoicebyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("selectchoicebyid", idParameter);
        }
    
        public virtual ObjectResult<SelectExam_Result> SelectExam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectExam_Result>("SelectExam");
        }
    
        public virtual ObjectResult<SelectExamsForStudent_Result> SelectExamsForStudent(Nullable<int> sid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectExamsForStudent_Result>("SelectExamsForStudent", sidParameter);
        }
    
        public virtual ObjectResult<selectquestion_Result> selectquestion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectquestion_Result>("selectquestion");
        }
    
        public virtual ObjectResult<string> selectquestionbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("selectquestionbyid", idParameter);
        }
    
        public virtual ObjectResult<SelectSt_Result> SelectSt(Nullable<int> sid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectSt_Result>("SelectSt", sidParameter);
        }
    
        public virtual ObjectResult<SelectSt_courses_Result> SelectSt_courses(Nullable<int> sid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectSt_courses_Result>("SelectSt_courses", sidParameter);
        }
    
        public virtual ObjectResult<SelectStudentsForExam_Result> SelectStudentsForExam(Nullable<int> eid)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStudentsForExam_Result>("SelectStudentsForExam", eidParameter);
        }
    
        public virtual ObjectResult<SelStd_exam_qust_Result> SelStd_exam_qust(Nullable<int> sid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelStd_exam_qust_Result>("SelStd_exam_qust", sidParameter);
        }
    
        public virtual ObjectResult<SelStds_exam_qusts_Result> SelStds_exam_qusts(Nullable<int> sid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelStds_exam_qusts_Result>("SelStds_exam_qusts", sidParameter);
        }
    
        public virtual ObjectResult<SP_AllCrsSelect_Result> SP_AllCrsSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_AllCrsSelect_Result>("SP_AllCrsSelect");
        }
    
        public virtual ObjectResult<SP_AllInsCrs_Result> SP_AllInsCrs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_AllInsCrs_Result>("SP_AllInsCrs");
        }
    
        public virtual ObjectResult<SP_Allinstructors_Result> SP_Allinstructors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Allinstructors_Result>("SP_Allinstructors");
        }
    
        public virtual ObjectResult<SP_AllTDepartments_Result> SP_AllTDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_AllTDepartments_Result>("SP_AllTDepartments");
        }
    
        public virtual ObjectResult<SP_AllTopics_Result> SP_AllTopics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_AllTopics_Result>("SP_AllTopics");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<string> SP_CrsInsert(string name, string duration)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CrsInsert", nameParameter, durationParameter);
        }
    
        public virtual ObjectResult<SP_CrsSelectById_Result> SP_CrsSelectById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CrsSelectById_Result>("SP_CrsSelectById", idParameter);
        }
    
        public virtual ObjectResult<SP_CrsSelectByName_Result> SP_CrsSelectByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CrsSelectByName_Result>("SP_CrsSelectByName", nameParameter);
        }
    
        public virtual ObjectResult<string> SP_CrsUpdate(Nullable<int> id, string name, string duration)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CrsUpdate", idParameter, nameParameter, durationParameter);
        }
    
        public virtual ObjectResult<string> SP_DeleteCrsById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DeleteCrsById", idParameter);
        }
    
        public virtual ObjectResult<string> SP_DeleteDepById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DeleteDepById", idParameter);
        }
    
        public virtual ObjectResult<string> SP_DeleteInsById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DeleteInsById", idParameter);
        }
    
        public virtual ObjectResult<string> SP_DeleteInstCrsByCrsId(Nullable<int> crsId)
        {
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("CrsId", crsId) :
                new ObjectParameter("CrsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DeleteInstCrsByCrsId", crsIdParameter);
        }
    
        public virtual ObjectResult<string> SP_DeleteInstCrsById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DeleteInstCrsById", iDParameter);
        }
    
        public virtual ObjectResult<string> SP_DeleteInstCrsByInsId(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DeleteInstCrsByInsId", iDParameter);
        }
    
        public virtual ObjectResult<string> SP_DeleteTopicById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DeleteTopicById", idParameter);
        }
    
        public virtual ObjectResult<string> SP_DepInsert(string depName, Nullable<int> insId)
        {
            var depNameParameter = depName != null ?
                new ObjectParameter("depName", depName) :
                new ObjectParameter("depName", typeof(string));
    
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("insId", insId) :
                new ObjectParameter("insId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DepInsert", depNameParameter, insIdParameter);
        }
    
        public virtual ObjectResult<SP_DepSelectById_Result> SP_DepSelectById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DepSelectById_Result>("SP_DepSelectById", idParameter);
        }
    
        public virtual ObjectResult<SP_DepSelectByName_Result> SP_DepSelectByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DepSelectByName_Result>("SP_DepSelectByName", nameParameter);
        }
    
        public virtual ObjectResult<string> SP_DepUpdate(Nullable<int> id, string depName, Nullable<int> insId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var depNameParameter = depName != null ?
                new ObjectParameter("depName", depName) :
                new ObjectParameter("depName", typeof(string));
    
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("insId", insId) :
                new ObjectParameter("insId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DepUpdate", idParameter, depNameParameter, insIdParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<string> SP_InsCrsInsert(Nullable<int> instId, Nullable<int> crsId)
        {
            var instIdParameter = instId.HasValue ?
                new ObjectParameter("instId", instId) :
                new ObjectParameter("instId", typeof(int));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_InsCrsInsert", instIdParameter, crsIdParameter);
        }
    
        public virtual ObjectResult<string> SP_InsCrsUpdate(Nullable<int> iD, Nullable<int> instId, Nullable<int> crsId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var instIdParameter = instId.HasValue ?
                new ObjectParameter("instId", instId) :
                new ObjectParameter("instId", typeof(int));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_InsCrsUpdate", iDParameter, instIdParameter, crsIdParameter);
        }
    
        public virtual ObjectResult<string> SP_InsInsert(Nullable<int> id, string fname, string lname, Nullable<int> depId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("DepId", depId) :
                new ObjectParameter("DepId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_InsInsert", idParameter, fnameParameter, lnameParameter, depIdParameter);
        }
    
        public virtual ObjectResult<SP_InsSelectById_Result> SP_InsSelectById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_InsSelectById_Result>("SP_InsSelectById", idParameter);
        }
    
        public virtual ObjectResult<SP_InsSelectByName_Result> SP_InsSelectByName(string fname)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_InsSelectByName_Result>("SP_InsSelectByName", fnameParameter);
        }
    
        public virtual ObjectResult<string> SP_InsUpdate(Nullable<int> id, string fname, string lname, Nullable<int> depId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("DepId", depId) :
                new ObjectParameter("DepId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_InsUpdate", idParameter, fnameParameter, lnameParameter, depIdParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<SP_selectQuesType_Result> SP_selectQuesType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_selectQuesType_Result>("SP_selectQuesType");
        }
    
        public virtual ObjectResult<SP_stdSearchByName_Result> SP_stdSearchByName(string fName)
        {
            var fNameParameter = fName != null ?
                new ObjectParameter("fName", fName) :
                new ObjectParameter("fName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_stdSearchByName_Result>("SP_stdSearchByName", fNameParameter);
        }
    
        public virtual ObjectResult<string> SP_TopicInsert(string topicName, Nullable<int> crsId)
        {
            var topicNameParameter = topicName != null ?
                new ObjectParameter("TopicName", topicName) :
                new ObjectParameter("TopicName", typeof(string));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_TopicInsert", topicNameParameter, crsIdParameter);
        }
    
        public virtual ObjectResult<string> SP_TopicUpdate(Nullable<int> id, string topicName, Nullable<int> crsId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("TopicName", topicName) :
                new ObjectParameter("TopicName", typeof(string));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_TopicUpdate", idParameter, topicNameParameter, crsIdParameter);
        }
    
        public virtual ObjectResult<SP_TopSelectById_Result> SP_TopSelectById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TopSelectById_Result>("SP_TopSelectById", idParameter);
        }
    
        public virtual ObjectResult<SP_TopSelectByName_Result> SP_TopSelectByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TopSelectByName_Result>("SP_TopSelectByName", nameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<string> spdeletetype(Nullable<int> qid)
        {
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spdeletetype", qidParameter);
        }
    
        public virtual ObjectResult<string> spinsertqustiontype(Nullable<int> qid, string type)
        {
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spinsertqustiontype", qidParameter, typeParameter);
        }
    
        public virtual ObjectResult<string> spselectQuesTypebyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spselectQuesTypebyid", idParameter);
        }
    
        public virtual ObjectResult<string> spupdatetype(Nullable<int> qid, string type)
        {
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spupdatetype", qidParameter, typeParameter);
        }
    
        public virtual ObjectResult<string> StdInsert(Nullable<int> sid, string fname, string lname, Nullable<int> deptId)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("deptId", deptId) :
                new ObjectParameter("deptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("StdInsert", sidParameter, fnameParameter, lnameParameter, deptIdParameter);
        }
    
        public virtual ObjectResult<string> updatechoice(Nullable<int> chid, string choice, Nullable<int> qid)
        {
            var chidParameter = chid.HasValue ?
                new ObjectParameter("chid", chid) :
                new ObjectParameter("chid", typeof(int));
    
            var choiceParameter = choice != null ?
                new ObjectParameter("choice", choice) :
                new ObjectParameter("choice", typeof(string));
    
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("updatechoice", chidParameter, choiceParameter, qidParameter);
        }
    
        public virtual ObjectResult<string> updatequestion(Nullable<int> qid, string qustion, Nullable<int> grade, Nullable<int> crsid, string correctchoice)
        {
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            var qustionParameter = qustion != null ?
                new ObjectParameter("qustion", qustion) :
                new ObjectParameter("qustion", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var crsidParameter = crsid.HasValue ?
                new ObjectParameter("crsid", crsid) :
                new ObjectParameter("crsid", typeof(int));
    
            var correctchoiceParameter = correctchoice != null ?
                new ObjectParameter("correctchoice", correctchoice) :
                new ObjectParameter("correctchoice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("updatequestion", qidParameter, qustionParameter, gradeParameter, crsidParameter, correctchoiceParameter);
        }
    
        public virtual ObjectResult<string> UpdExam(Nullable<int> oldeid, string ename)
        {
            var oldeidParameter = oldeid.HasValue ?
                new ObjectParameter("oldeid", oldeid) :
                new ObjectParameter("oldeid", typeof(int));
    
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdExam", oldeidParameter, enameParameter);
        }
    
        public virtual ObjectResult<string> UpdSt(Nullable<int> oldid, string fname, string lname, string email, string phone, string address, Nullable<int> deptId)
        {
            var oldidParameter = oldid.HasValue ?
                new ObjectParameter("oldid", oldid) :
                new ObjectParameter("oldid", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("deptId", deptId) :
                new ObjectParameter("deptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdSt", oldidParameter, fnameParameter, lnameParameter, emailParameter, phoneParameter, addressParameter, deptIdParameter);
        }
    
        public virtual ObjectResult<string> UpdSt_crs(Nullable<int> id, Nullable<int> nsid, Nullable<int> ncid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nsidParameter = nsid.HasValue ?
                new ObjectParameter("nsid", nsid) :
                new ObjectParameter("nsid", typeof(int));
    
            var ncidParameter = ncid.HasValue ?
                new ObjectParameter("ncid", ncid) :
                new ObjectParameter("ncid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdSt_crs", idParameter, nsidParameter, ncidParameter);
        }
    
        public virtual ObjectResult<string> UpdStd_exam_qust(Nullable<int> id, Nullable<int> sid, Nullable<int> quesid, Nullable<int> examid, string stdanswer, Nullable<int> stdGrade)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var quesidParameter = quesid.HasValue ?
                new ObjectParameter("quesid", quesid) :
                new ObjectParameter("quesid", typeof(int));
    
            var examidParameter = examid.HasValue ?
                new ObjectParameter("examid", examid) :
                new ObjectParameter("examid", typeof(int));
    
            var stdanswerParameter = stdanswer != null ?
                new ObjectParameter("stdanswer", stdanswer) :
                new ObjectParameter("stdanswer", typeof(string));
    
            var stdGradeParameter = stdGrade.HasValue ?
                new ObjectParameter("stdGrade", stdGrade) :
                new ObjectParameter("stdGrade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdStd_exam_qust", idParameter, sidParameter, quesidParameter, examidParameter, stdanswerParameter, stdGradeParameter);
        }
    
        public virtual int ExamGenerations(string exam)
        {
            var examParameter = exam != null ?
                new ObjectParameter("exam", exam) :
                new ObjectParameter("exam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExamGenerations", examParameter);
        }
    
        public virtual int ExamAnswerss(Nullable<int> stdID, Nullable<int> examNum, string stdAnswers, Nullable<int> quesID)
        {
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("stdID", stdID) :
                new ObjectParameter("stdID", typeof(int));
    
            var examNumParameter = examNum.HasValue ?
                new ObjectParameter("examNum", examNum) :
                new ObjectParameter("examNum", typeof(int));
    
            var stdAnswersParameter = stdAnswers != null ?
                new ObjectParameter("stdAnswers", stdAnswers) :
                new ObjectParameter("stdAnswers", typeof(string));
    
            var quesIDParameter = quesID.HasValue ?
                new ObjectParameter("quesID", quesID) :
                new ObjectParameter("quesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExamAnswerss", stdIDParameter, examNumParameter, stdAnswersParameter, quesIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CalculucateDegree(Nullable<int> stdId, Nullable<int> examNum)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            var examNumParameter = examNum.HasValue ?
                new ObjectParameter("examNum", examNum) :
                new ObjectParameter("examNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CalculucateDegree", stdIdParameter, examNumParameter);
        }
    
        public virtual int examCorrections(Nullable<int> sid, Nullable<int> examNum, Nullable<int> quesID)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var examNumParameter = examNum.HasValue ?
                new ObjectParameter("examNum", examNum) :
                new ObjectParameter("examNum", typeof(int));
    
            var quesIDParameter = quesID.HasValue ?
                new ObjectParameter("quesID", quesID) :
                new ObjectParameter("quesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("examCorrections", sidParameter, examNumParameter, quesIDParameter);
        }
    }
}
